<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>控制任意一行列灯</title>
      <link href="/2020/06/23/%E6%8E%A7%E5%88%B6%E4%BB%BB%E6%84%8F%E4%B8%80%E8%A1%8C%E5%88%97%E7%81%AF/"/>
      <url>/2020/06/23/%E6%8E%A7%E5%88%B6%E4%BB%BB%E6%84%8F%E4%B8%80%E8%A1%8C%E5%88%97%E7%81%AF/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="操作一：添加相关代码"><a href="#操作一：添加相关代码" class="headerlink" title="操作一：添加相关代码"></a>操作一：添加相关代码</h2><h3 id="在网页上控制蓝牙板子上的任意一行或者一列灯亮。"><a href="#在网页上控制蓝牙板子上的任意一行或者一列灯亮。" class="headerlink" title="在网页上控制蓝牙板子上的任意一行或者一列灯亮。"></a>在网页上控制蓝牙板子上的任意一行或者一列灯亮。</h3><p>1.我们要在开头用代码定义三个数组，用于表示要写入的值：</p><p><img src="https://static01.imgkr.com/temp/5d9ba549c1824778a4c92b1cd229cbe1.png" alt=""></p><p>2.定义两组按钮来控制led灯，每个按钮调用一个函数，用来改变led灯的亮灭。</p><p><img src="https://static01.imgkr.com/temp/efabed124f8d418c957ec4321394678b.png" alt=""></p><p>3.添加相关的函数用来控制led灯的行：</p><p><img src="https://static01.imgkr.com/temp/032da52ca9ae4f4498e6a493c9ec8c54.png" alt=""></p><p>4.添加相关的函数用来控制led灯的列：</p><p><img src="https://static01.imgkr.com/temp/0803333e76d0493fb5bc1eb5dcb17c7d.png" alt=""></p><p>5.修改“randomLEDs()函数，并删除下方原来的代码：</p><p><img src="https://static01.imgkr.com/temp/23fe9bd55d87401ca604ec96690f0415.png" alt=""></p><h2 id="操作二：-执行，结果"><a href="#操作二：-执行，结果" class="headerlink" title="操作二： 执行，结果"></a>操作二： 执行，结果</h2><p>1.打开谷歌网页连接蓝牙并点击led灯的”行”与”列”。</p><p><img src="https://static01.imgkr.com/temp/ef4a3259993248b0b4ab1d77a4948d80.png" alt=""></p><p>2.蓝牙板子的显示：</p><p><img src="https://static01.imgkr.com/temp/d4145c7d5f74446f9823f07d1a25c26f.jpg" alt=""></p><p>我点击的“一三五”行与“一三五”列，显示的是“田”。成功！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>加速度计得三轴值</title>
      <link href="/2020/06/22/%E5%8A%A0%E9%80%9F%E5%BA%A6%E8%AE%A1%E5%BE%97%E4%B8%89%E8%BD%B4%E5%80%BC/"/>
      <url>/2020/06/22/%E5%8A%A0%E9%80%9F%E5%BA%A6%E8%AE%A1%E5%BE%97%E4%B8%89%E8%BD%B4%E5%80%BC/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="操作一：下载“蓝牙加速计服务”"><a href="#操作一：下载“蓝牙加速计服务”" class="headerlink" title="操作一：下载“蓝牙加速计服务”"></a>操作一：下载“蓝牙加速计服务”</h2><p>用谷歌浏览器打开 <a href="https://makecode.microbit.org/v0/89975-20684-84568-20127" target="_blank" rel="noopener">https://makecode.microbit.org/v0/89975-20684-84568-20127</a>  网址，然后查看是否有“蓝牙加速计服务，一般是有的，没有的可以添加然后点击左下角的下载到micbit板子里。</p><p><img src="https://static01.imgkr.com/temp/ccce4d563b4f4de5a99eaddc3e26634c.png" alt=""></p><h2 id="操作二：添加相关代码"><a href="#操作二：添加相关代码" class="headerlink" title="操作二：添加相关代码"></a>操作二：添加相关代码</h2><p>1.添加变量<br><img src="https://static01.imgkr.com/temp/4f512c8e6680439a9aa07afebf48357a.png" alt=""><br>2.添加一个函数进行数据传输<br><img src="https://static01.imgkr.com/temp/4e645561011a4148a7da583f668ffd5e.png" alt=""><br>3.在 “resetUI()”中添加“setNotificationsStatus(status)”进行调用</p><p><img src="https://static01.imgkr.com/temp/22cc386e34094c96998251bd7709e723.png" alt=""></p><p>4.添加调用命令先认证再执行：</p><p><img src="https://static01.imgkr.com/temp/9e9ddf11f57c4bd1875d04882594a0ae.png" alt=""></p><p>5.我们需要一些代码来进行处理收到的通知，还需要再通知通知的时候做一些整理，所以我们需要再“toggleAccelerometerNotifications()中添加如下代码：</p><p><img src="https://static01.imgkr.com/temp/8d1d85f47a154999af4f823250b05984.png" alt=""></p><p>6.添加onAccelerometerData函数，将每次收到通知的时候会被调用。事件处理程序接收一个事件对象，将附加到事件对象目标值的ArrayBuffer中。</p><p><img src="https://static01.imgkr.com/temp/47a5b95ec0cb426f853e22f9433fa7a1.png" alt=""></p><p>7.添加表格：</p><p><img src="https://static01.imgkr.com/temp/0bb0994ac98242ae92584b9298760833.png" alt=""></p><p><img src="https://static01.imgkr.com/temp/84ee10d9c30141b68326553102d2eb9e.png" alt=""></p><h2 id="操作三：将打好的代码保存并打开谷歌网页，查看实验结果"><a href="#操作三：将打好的代码保存并打开谷歌网页，查看实验结果" class="headerlink" title="操作三：将打好的代码保存并打开谷歌网页，查看实验结果"></a>操作三：将打好的代码保存并打开谷歌网页，查看实验结果</h2><p><img src="https://static01.imgkr.com/temp/27967c8e31a14055a63379ff712a29f9.png" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>led读写特性</title>
      <link href="/2020/06/21/led%E8%AF%BB%E5%86%99%E7%89%B9%E6%80%A7/"/>
      <url>/2020/06/21/led%E8%AF%BB%E5%86%99%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="为蓝牙开发板添加读写特性"><a href="#为蓝牙开发板添加读写特性" class="headerlink" title="为蓝牙开发板添加读写特性"></a>为蓝牙开发板添加读写特性</h2><p>1.写特性：</p><p><img src="https://static01.imgkr.com/temp/f0d2edd6625a4a378f9b7a0c89f21bff.png" alt=""></p><p>2.读特性：</p><p><img src="https://static01.imgkr.com/temp/93f93e7525334c1bb3b77bb0e51ef32c.png" alt=""></p><p>3.添加表格按钮：</p><p><img src="https://static01.imgkr.com/temp/097fadd8931f4b15a5ac8b99de5cfd29.png" alt=""></p><p>4.打开谷歌网页并连接蓝牙，点击所标记的按钮，效果如下：</p><p><img src="https://static01.imgkr.com/temp/9f395533fd054bc6806e32d5c58f649d.jpg" alt=""></p><p>led小灯亮：</p><p><img src="https://static01.imgkr.com/temp/2de45f210c334994824b15ccf9f30bfd.jpg" alt=""></p><p>完成！</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>led矩阵的服务特性</title>
      <link href="/2020/06/18/led%E7%9F%A9%E9%98%B5%E7%9A%84%E6%9C%8D%E5%8A%A1%E7%89%B9%E6%80%A7/"/>
      <url>/2020/06/18/led%E7%9F%A9%E9%98%B5%E7%9A%84%E6%9C%8D%E5%8A%A1%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="操作一："><a href="#操作一：" class="headerlink" title="操作一："></a>操作一：</h2><p>首先，我们打开谷歌浏览器并搜索“chrome://bluetooth-internals”并依次点开以下步骤。</p><p><img src="https://imgkr.cn-bj.ufileos.com/61a0978b-5b3d-48b2-a819-485734873d39.png" alt=""><br><img src="https://imgkr.cn-bj.ufileos.com/bee2c663-8676-4230-adad-323a0586ce48.png" alt=""><br>发现蓝色区域是我们现在一共有8给服务，它们每个实现的功能都不相同</p><p>紧接着，在浏览器中搜索“<a href="https://makecode.microbit.org/v0/89975-20684-84568-20127”，" target="_blank" rel="noopener">https://makecode.microbit.org/v0/89975-20684-84568-20127”，</a> 进行蓝牙在线编辑。<br><img src="https://imgkr.cn-bj.ufileos.com/365f0b08-f786-40c2-b365-156a7703e3c8.png" alt=""><br>在搜索中找到蓝牙并选择“蓝牙温度服务”，并切记一定一定要把这个模块拖到正确的位置，不然下载了也没用，亲身经历，很难受因为这事折腾了十几分钟。选择它并点击左下角的下载，下载好打开当前文件夹，把它拖到蓝牙所带的内存盘里。<br><img src="https://imgkr.cn-bj.ufileos.com/8361d5cc-93d9-447a-a2bf-ce96115b132b.png" alt=""><br>刷新谷歌蓝牙网页，你会发现里面已经有9个功能了，上图的”e95d6100…….”就是蓝牙温度服务功能啊哈哈哈哈~！</p><h2 id="操作二："><a href="#操作二：" class="headerlink" title="操作二："></a>操作二：</h2><p>在我们第一课时“蓝牙连接”编写代码的基础上添加一些代码程序，以下是开头所要添加的代码程序</p><p><img src="https://imgkr.cn-bj.ufileos.com/6998f8bd-f3c4-4ae0-b526-3061188a0bd5.png" alt=""><br><img src="https://imgkr.cn-bj.ufileos.com/177de700-1ea2-4e14-8885-446d05853cbc.png" alt=""><br>添加服务：</p><p><img src="https://imgkr.cn-bj.ufileos.com/da6f3a0d-ada6-4ee6-b823-82451903dd4b.png" alt=""><br>最后的表格修改：<br><img src="https://imgkr.cn-bj.ufileos.com/698f320a-9631-4793-acb0-b790bd33202e.png" alt=""><br>验证成果：</p><p><img src="https://imgkr.cn-bj.ufileos.com/1dd3d6ae-4980-4447-9740-a4501e843a6a.jpg" alt=""><br>蓝牙温度服务操作成功！哈哈哈哈咯！<br>板子显示：<br><img src="https://static01.imgkr.com/temp/256408dc2ea24b119c80c21aa15c86b1.jpg" alt=""></p><h2 id="操作三："><a href="#操作三：" class="headerlink" title="操作三："></a>操作三：</h2><h3 id="代码解析："><a href="#代码解析：" class="headerlink" title="代码解析："></a>代码解析：</h3><p>1.开头添加的是标志变量，用于核对bbc microbit有没有相应的服务<br>has_accelerometer_service，has_led_service，<br>has_device_information_service，<br>has_temperature_serivce，</p><p>而后则是用于核对特性是否存在<br>has_accelerometer_data ，</p><p>has_led_matrix_state，</p><p>has_model_name_string，</p><p>has_temperature，</p><p> service UUIDs和characteristic UUIDs用于核对板子的特性和服务来进行连接。<br> service_count,characteristic_count是服务和特性发现的数量。 </p><p> services_discovered,characteristics_discovered是被发现服务和特性的数量</p><p> 2.添加service UUID和characteristic UUID号，用来进行与开发板中服务UUID号进行核对。<br> <img src="https://imgkr.cn-bj.ufileos.com/1e6371ad-943e-4884-9794-c7691c913c43.png" alt=""><br> 3.函数function discoverSvcsAndChars()用来发现开发板的服务和特性，使用connected_server.getPrimaryServices()用来获取BBC Microbit板子的主要服务。<br> <img src="https://static01.imgkr.com/temp/6dd588fbea594804b8752e642147b7b4.png" alt=""><br> 4.service_count=services.length是表示发现BBC MicroBit板服务的个数，并将发现的服务打印出来。<br> <img src="https://static01.imgkr.com/temp/786a3082a2394b87ab087053e483a18a.png" alt=""></p><p> 5.已发现的服务通过if进行判断，核对是否一致。完成后uuid打印输出，然后函数 service.getCharacteristics()获取改服务的所有特性，对该特性通过if判断进行核对。<br> <img src="https://static01.imgkr.com/temp/761eb8f8c9044f42920373743361089a.png" alt=""></p><p> 6.最后把发现的服务和特性数量和已发现的服务和特性数量进行核对。如果一致则成功，并打印 FINISHED DISCOVERY。<br> <img src="https://static01.imgkr.com/temp/3e9537c1339b4abab03db17fd979f94d.png" alt=""><br> 7.信息核对成功后，要把setDiscoveryStatus(true)通过函数function setDiscoveryStatus(status)显示出来，表示添加服务及特性成功。<br> <img src="https://static01.imgkr.com/temp/ad2c1dab194b4b2581ea1e853f1eee0f.png" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>LED矩阵连接设备步骤</title>
      <link href="/2020/06/16/LED%E7%9F%A9%E9%98%B5%E8%BF%9E%E6%8E%A5%E8%AE%BE%E5%A4%87%E6%AD%A5%E9%AA%A4/"/>
      <url>/2020/06/16/LED%E7%9F%A9%E9%98%B5%E8%BF%9E%E6%8E%A5%E8%AE%BE%E5%A4%87%E6%AD%A5%E9%AA%A4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h2 id="1-开发环境准备"><a href="#1-开发环境准备" class="headerlink" title="1.开发环境准备"></a>1.开发环境准备</h2><p>（1）打开电脑的控制面板里面的蓝牙，点击打开状态。</p><p><img src="https://imgkr.cn-bj.ufileos.com/bbf5f359-fcdc-43de-9ab4-b3c7dc921b1c.png" alt=""> </p><p>（2）检查我的电脑本机系统 win+r，输入“winver”。</p><p><img src="https://imgkr.cn-bj.ufileos.com/1b38f521-2b95-491c-a604-b7cca84aadb0.png" alt=""> </p><p>（3）打开谷歌看下版本。</p><p><img src="https://imgkr.cn-bj.ufileos.com/11aec105-4916-4aee-8b2b-d4a37d4a4251.png" alt=""> </p><h2 id="2-扫描周边环境"><a href="#2-扫描周边环境" class="headerlink" title="2.扫描周边环境"></a>2.扫描周边环境</h2><p>如图（4），由于开始做的时候忘了截图，就没有代码步骤了。</p><p><img src="https://imgkr.cn-bj.ufileos.com/c875c18b-933b-407a-9fb1-a61dad23f08e.png" alt=""> </p><p>点击“start  scan”，再连接蓝牙配对，出现如图（5），说明成功一小部分。 </p><p><img src="https://imgkr.cn-bj.ufileos.com/3d7fed44-4542-434f-af4d-265ba8328c17.png" alt=""> </p><h2 id="3-连接设备"><a href="#3-连接设备" class="headerlink" title="3.连接设备"></a>3.连接设备</h2><p>如图（6），connect是选择要点击或链接的函数  </p><p><img src="https://imgkr.cn-bj.ufileos.com/0b5d7e99-0dff-4ddb-a66e-c1e957057107.jpg" alt=""> </p><p>如图（7），这段函数主要的功能是打印输出，提示用户，正在链接，调用一些方法。<br><img src="https://imgkr.cn-bj.ufileos.com/bfdbce39-5990-4f44-b76f-48c5d6dc7ee6.png" alt=""><br>如图（8）和（9），selected_device 是显示各种名字id和各种信息<br><img src="https://imgkr.cn-bj.ufileos.com/ecdd79a7-54ac-4c49-a3a5-a022871d2aa3.png" alt=""><br><img src="https://imgkr.cn-bj.ufileos.com/b7036c12-1b41-402b-b3db-8022f8426d68.png" alt=""> </p><h2 id="4-断开连接"><a href="#4-断开连接" class="headerlink" title="4.断开连接"></a>4.断开连接</h2><p>如图（10），（11），(12),当开启蓝牙设备之后，再次点击“Disconnect”则断开连接。<br><img src="https://imgkr.cn-bj.ufileos.com/5c9450e3-19ef-43f8-90ab-e83cc6337450.png" alt=""><br><img src="https://imgkr.cn-bj.ufileos.com/9540c236-b6f7-463b-9a18-64a838871976.png" alt=""><br><img src="https://imgkr.cn-bj.ufileos.com/f438ef27-962d-4e48-92e6-ed17b88b02e1.png" alt="">  </p><p>以下连接成功显示“c”，断开连接显示”D”的结果</p><p><img src="https://imgkr.cn-bj.ufileos.com/f208cc68-661f-4903-949f-9ec208fa419a.jpg" alt=""><br><img src="https://imgkr.cn-bj.ufileos.com/31a4416f-15b3-4d40-8139-d01194c0ef68.jpg" alt=""></p><p>如图（13）和（14），完整代码及结果如图所示</p><p><img src="https://imgkr.cn-bj.ufileos.com/09d15d2f-449d-4628-b566-a3211b58f06b.png" alt=""><br><img src="https://imgkr.cn-bj.ufileos.com/1d911b1a-783b-4454-bf11-3c1ab2296ce4.png" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hexo上传图片并加入文章</title>
      <link href="/2020/05/29/hexo%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E5%B9%B6%E5%8A%A0%E5%85%A5%E6%96%87%E7%AB%A0/"/>
      <url>/2020/05/29/hexo%E4%B8%8A%E4%BC%A0%E5%9B%BE%E7%89%87%E5%B9%B6%E5%8A%A0%E5%85%A5%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h1><h2 id="准备图片"><a href="#准备图片" class="headerlink" title="准备图片"></a>准备图片</h2><p><img src="https://imgkr.cn-bj.ufileos.com/d3cfda5d-786e-43af-a875-ea2cf88b8a89.png" alt=""></p><h2 id="上传图片到图床"><a href="#上传图片到图床" class="headerlink" title="上传图片到图床"></a>上传图片到图床</h2><blockquote><p>使用网络公开的图床API上传图片，获取网络地址</p></blockquote><p><img src="https://imgkr.cn-bj.ufileos.com/4165f9aa-3304-4fe9-ace1-0c683a72913b.png" alt=""></p><h2 id="使用markdown格式插入图片"><a href="#使用markdown格式插入图片" class="headerlink" title="使用markdown格式插入图片"></a>使用markdown格式插入图片</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![头像](https:&#x2F;&#x2F;imgkr.cn-bj.ufileos.com&#x2F;41886611-970f-4e2b-a856-9f81c047d88e.png)</span><br></pre></td></tr></table></figure><p><strong>效果如图：</strong></p><p><img src="https://imgkr.cn-bj.ufileos.com/41886611-970f-4e2b-a856-9f81c047d88e.png" alt="头像"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>安装hexo以及简单配置</title>
      <link href="/2020/05/29/%E5%AE%89%E8%A3%85hexo%E4%BB%A5%E5%8F%8A%E7%AE%80%E5%8D%95%E9%85%8D%E7%BD%AE/"/>
      <url>/2020/05/29/%E5%AE%89%E8%A3%85hexo%E4%BB%A5%E5%8F%8A%E7%AE%80%E5%8D%95%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h1><p>在安装 Hexo 之前，你需要安装以下两个工具：</p><ul><li>Git</li><li>Node.js</li></ul><p>如果您已经安装好以上两个工具，可以直接跳转至 安装 Hexo。</p><h2 id="安装-Git"><a href="#安装-Git" class="headerlink" title="安装 Git"></a>安装 Git</h2><ul><li>Windows：下载并安装 git.</li><li>Mac：使用 Homebrew, MacPorts ： brew install git ; 或下载 安装程序 安装。</li><li>Linux (Ubuntu, Debian)： sudo apt-get install git-core</li><li>Linux (Fedora, Red Hat, CentOS)： sudo yum install git-core</li><li>Linux (Arch 系列)： sudo pacman -S git</li></ul><blockquote><p>提醒</p><p>由于墙的原因，从上面的链接下载 git for windows 最好挂上一个代理，否则下载速度十分缓慢。也可以参考这个页面，收录了存储于百度云的下载地址。</p></blockquote><blockquote><p>提醒</p><p>如果你是 CentOS 服务器上的，可以直接使用 HexoOneClickInstallation 这个脚本快速安装 Hexo。</p></blockquote><h1 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h1><p>安装 Node.js 的最佳方式是使用 nvm。</p><p>cURL:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl https:&#x2F;&#x2F;raw.github.com&#x2F;creationix&#x2F;nvm&#x2F;v0.33.11&#x2F;install.sh | sh</span><br></pre></td></tr></table></figure><p>Wget:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget -qO- https:&#x2F;&#x2F;raw.github.com&#x2F;creationix&#x2F;nvm&#x2F;v0.33.11&#x2F;install.sh | sh</span><br></pre></td></tr></table></figure><p>安装完成后，重启终端并执行下列命令即可安装 Node.js。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm install stable</span><br></pre></td></tr></table></figure><p>或者您也可以下载 安装程序 来安装。</p><h1 id="安装-Hexo-1"><a href="#安装-Hexo-1" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h1><p>安装好后，即可使用 npm 完成 Hexo 的安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h1 id="建立网站"><a href="#建立网站" class="headerlink" title="建立网站"></a>建立网站</h1><p>安装好 Hexo 后即可建立你的网站。</p><p>首先建立一个文件夹。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir &lt;your_blog_name&gt;  # 建立你的网站根目录，名字可以自己修改</span><br></pre></td></tr></table></figure><p>然后往这个文件夹里安装 Hexo。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init &lt;your_blog_name&gt;</span><br></pre></td></tr></table></figure><p>这样就建立好网站了！</p><h1 id="配置-Hexo"><a href="#配置-Hexo" class="headerlink" title="配置 Hexo"></a>配置 Hexo</h1><blockquote><p>警告</p><p>此部分内容可能过期，请见 <a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">Hexo 官方文档</a>。</p></blockquote><h2 id="博客预览"><a href="#博客预览" class="headerlink" title="博客预览"></a>博客预览</h2><p>下面是我的<code>Hexo</code>博客预览,主题使用<code>Butterfly</code>。</p><p><img src="https://imgkr.cn-bj.ufileos.com/bd300dbe-30b1-4739-9159-d5640a61ab19.png" alt=""></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>认识hexo</title>
      <link href="/2020/05/29/%E8%AE%A4%E8%AF%86Hexo/"/>
      <url>/2020/05/29/%E8%AE%A4%E8%AF%86Hexo/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="认识-Hexo"><a href="#认识-Hexo" class="headerlink" title="认识 Hexo"></a>认识 Hexo</h1><p>Hexo 是一个快速、简洁且高效的博客框架，可以让你快速建立一个博客。</p><h1 id="快速"><a href="#快速" class="headerlink" title="快速"></a>快速</h1><p>Hexo 使用 Node.js 编写。得益于 Node.js，使得 Hexo 生成上百个页面游刃有余。</p><h1 id="支持-Markdown"><a href="#支持-Markdown" class="headerlink" title="支持 Markdown"></a>支持 Markdown</h1><p>Hexo 支持 GFM (GitHub Flavored Markdown) 的大部分功能。如果你不喜欢 Markdown ，你还可以换一个 Hexo 渲染插件。</p><h1 id="部署方便"><a href="#部署方便" class="headerlink" title="部署方便"></a>部署方便</h1><p>只需要一条指令就可以部署到 GitHub Pages、Heroku、Coding Pages 等其他网站。</p><h1 id="插件丰富"><a href="#插件丰富" class="headerlink" title="插件丰富"></a>插件丰富</h1><p>Hexo 有许多插件，可以进行各种操作。</p><h1 id="学习-Hexo-之前，你需要有："><a href="#学习-Hexo-之前，你需要有：" class="headerlink" title="学习 Hexo 之前，你需要有："></a>学习 Hexo 之前，你需要有：</h1><ul><li><del>Node.js 基本知识</del></li><li><del>Git 基本知识</del></li><li>Markdown 基本知识</li><li><del>Html、css、JavaScript 基本知识</del></li><li>······</li></ul><p>当然了，你可别被吓跑了。除了 Markdown ，其他都不用熟练掌握（事实上如果你不注意排版连 Markdown 都不用掌握，但最好还是学学吧）。如果你完全不会以上划线部分的知识，也没关系。只是简单地建个可以发文章的博客就好了。如果你要更上一层楼，那么以上被划掉的知识就是必备的啦～</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>部署hexo到GitHub以及自定义域名</title>
      <link href="/2020/05/29/%E9%83%A8%E7%BD%B2hexo%E5%88%B0github%E4%BB%A5%E5%8F%8A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D/"/>
      <url>/2020/05/29/%E9%83%A8%E7%BD%B2hexo%E5%88%B0github%E4%BB%A5%E5%8F%8A%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><h1 id="部署-Hexo"><a href="#部署-Hexo" class="headerlink" title="部署 Hexo"></a>部署 Hexo</h1><h2 id="部署到-GitHub"><a href="#部署到-GitHub" class="headerlink" title="部署到 GitHub"></a>部署到 GitHub</h2><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="#准备工作"></a>#准备工作</h2><p>如果没有账号，请点此前往 GitHub 注册一个 GitHub 账号。</p><p>新建一个公开仓库，仓库名格式为 your_username.github.io 例如你的 GitHub 用户名是 easyhexo ，那么你的仓库地址名称就应该是 easyhexo.github.io</p><p>创建完成后记下该仓库的 HTTPS/SSH 地址，一般格式为 <a href="https://github.com/your_username/your_reponame.git" target="_blank" rel="noopener">https://github.com/your_username/your_reponame.git</a> 在下一步会用到。</p><h3 id="安装部署插件"><a href="#安装部署插件" class="headerlink" title="安装部署插件"></a>安装部署插件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br><span class="line">$ npm install hexo-server --save</span><br></pre></td></tr></table></figure><h3 id="配置-Git"><a href="#配置-Git" class="headerlink" title="配置 Git"></a>配置 Git</h3><p>如果你只是安装好了 Git 但没有配置过你的 Git ，那么现在需要做的第一件事情就是设置你的 Git 用户名和邮箱。 在 Git Bash 中执行以下两条命令配置你的用户名和邮箱，这里建议用户名和邮箱与你的 GitHub 用户名和邮箱保持一致。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;Your_user_name&quot;</span><br><span class="line">$ git config --global user.email Your_email@example.com</span><br></pre></td></tr></table></figure><blockquote><p>提醒</p><p>每次 Git 提交时都会附带这两条信息，用于记录是谁提交的更新，并且会随更新内容一起被记录到历史记录中。简单说，是用来标记的你的身份的～</p></blockquote><h3 id="配置站点-config-yml-文件"><a href="#配置站点-config-yml-文件" class="headerlink" title="配置站点 _config.yml 文件"></a>配置站点 _config.yml 文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git # 类型填git</span><br><span class="line">  repo: &lt;repository url&gt; # 你的Github仓库地址</span><br><span class="line">  branch: master # 分支名称。默认填写 master 如果您使用的是 GitHub ，程序会尝试自动检测。</span><br><span class="line">  message: # 提交信息可以自定义，不填的则默认为提交时间</span><br></pre></td></tr></table></figure><h3 id="发布到-GitHub"><a href="#发布到-GitHub" class="headerlink" title="发布到 GitHub"></a>发布到 GitHub</h3><p>在本地的 Hexo 站点根目录下，执行如下命令即可部署到 GitHub Pages 上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo d -g</span><br></pre></td></tr></table></figure><blockquote><p>提醒</p><p>如果是第一次使用，会弹出一个登录框，需要登录你的 GitHub 账号。</p></blockquote><h2 id="自定义域名"><a href="#自定义域名" class="headerlink" title="自定义域名"></a>自定义域名</h2><p>如果你拥有个人域名，请用 A 记录解析到以下 IP 中的任意一个。如果使用 CNAME 请解析到你的 GitHub 仓库名称。</p><ul><li>185.199.108.153</li><li>185.199.109.153</li><li>185.199.110.153</li><li>185.199.111.153</li></ul><p><strong>参考表格</strong></p><table><thead><tr><th>记录类型</th><th>主机记录</th><th>解析路线</th><th>记录值</th><th>MAX 优先级</th><th>TTL（秒）</th></tr></thead><tbody><tr><td>A</td><td>@</td><td>默认</td><td>185.199.110.153</td><td>-</td><td>600</td></tr><tr><td>CNAME</td><td>@</td><td>默认</td><td>GitHub博客仓库名称</td><td>-</td><td>600</td></tr></tbody></table><p>打开仓库设置，找到 GitHub Pages 项目，修改 Custom domain 选项的值为你的自定义域名（不带 http 等前缀）</p><p>勾选 Custom domain 选项下的 Enforce HTTPS 选项，强制开启 Https 。如果遇到 Enforce HTTPS 选项无法打开，可以稍等一会儿再尝试。</p><blockquote><p>提醒</p><p>同时需要在本地的 source 目录新建一个 CNAME 文件，内容为你的自定义域名（不带 http 等前缀）。否则无法使用自定义域名功能（ hexo d 生成的文件没有 CNAME 文件，导致仓库的自定域名设置失效）</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/05/27/hello-world/"/>
      <url>/2020/05/27/hello-world/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="\assets\js\Meting.min.js"></script><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="坠落星河"><a href="#坠落星河" class="headerlink" title="坠落星河"></a>坠落星河</h2><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
